@using Fuyu.Backend.Core.DTO.Accounts

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IDispatcher Dispatcher
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

@page "/login"

<Background Glass="true" GlassLeftPos="50%" />

<MudGrid Style="height: calc(100vh - 64px);" Spacing="0">
    <MudItem xs="6">
    </MudItem>
    <MudItem xs="6">
        <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Style="height: 100%">
            <MudStack Style="width: 400px;">
                <MudPaper Class="pa-4" Elevation="4">
                    <MudText Typo="Typo.body1">Login</MudText>
                    <MudText Typo="Typo.body2">Enter your login credentials.</MudText>
                </MudPaper>

                <MudPaper Class="pa-4" Elevation="4">
                    <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors" Spacing="4">
                        <MudTextField @bind-Value="_username" Label="Username" Required="true" RequiredError="Required" />
                        <MudTextField @bind-Value="_password" Label="Password" Required="true" RequiredError="Required" InputType="InputType.Password" />
                        <div class="d-flex align-center justify-center mt-6">
                            <MudButton Variant="Variant.Filled" Color="Color.Tertiary" Disabled="@(!_success)" OnClick="Login_Clicked">Login</MudButton>
                        </div>
                    </MudForm>
                </MudPaper>
            </MudStack>
        </MudStack>
    </MudItem>
</MudGrid>

@code {
    private bool _success;
    private string[] _errors = [];
    private MudForm _form;

    private string _username = string.Empty;
    private string _password = string.Empty;

    public void Login_Clicked()
    {
        _form.Validate();
        if (!_form.IsValid)
        {
            return;
        }

        var response = RequestService.LoginAccount(_username, _password);

        switch (response.Status)
        {
            case ELoginStatus.Success:
                RequestService.CreateSession("fuyu", SettingsService.FuyuAddress, response.SessionId);

                Dispatcher.Dispatch(new LoginSessionAction(_username));
                Dispatcher.Dispatch(new GetGamesAction());

                Navigation.NavigateTo("/");
                break;

            case ELoginStatus.AccountBanned:
                Snackbar.Add("Account is banned.", Severity.Warning);
                break;

            case ELoginStatus.AccountNotFound:
                Snackbar.Add("Account not found.", Severity.Warning);
                break;

            case ELoginStatus.SessionAlreadyExists:
                Snackbar.Add("Someone is already using this account.", Severity.Warning);
                break;

        }
    }
}
