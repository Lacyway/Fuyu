using System.Collections.Generic;
using System.Text;
using Fuyu.Compression;

namespace Fuyu.Tests.Compression
{
    class TestData
    {
        private const string _text = "The quick brown lazy fox jumps over the lazy dog";
        internal static readonly byte[] Inflated;
        internal static readonly Dictionary<CompressionLevel, byte[]> Deflated;

        static TestData()
        {
            Inflated = Encoding.UTF8.GetBytes(_text);
            Deflated = new Dictionary<CompressionLevel, byte[]>
            {
                {
                    CompressionLevel.Level1,
                    new byte[]
                    {
                        0x78, 0x01, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level2,
                    new byte[]
                    {
                        0x78, 0x01, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level3,
                    new byte[]
                    {
                        0x78, 0x5E, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level4,
                    new byte[]
                    {
                        0x78, 0x5E, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level5,
                    new byte[]
                    {
                        0x78, 0x9C, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level6,
                    new byte[]
                    {
                        0x78, 0x9C, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level7,
                    new byte[]
                    {
                        0x78, 0xDA, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level8,
                    new byte[]
                    {
                        0x78, 0xDA, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                },
                {
                    CompressionLevel.Level9,
                    new byte[]
                    {
                        0x78, 0xDA, 0x0B, 0xC9, 0x48, 0x55, 0x28, 0x2C, 0xCD,
                        0x4C, 0xCE, 0x56, 0x48, 0x2A, 0xCA, 0x2F, 0xCF, 0x53,
                        0xC8, 0x49, 0xAC, 0xAA, 0x54, 0x48, 0xCB, 0xAF, 0x50,
                        0xC8, 0x2A, 0xCD, 0x2D, 0x28, 0x56, 0xC8, 0x2F, 0x4B,
                        0x2D, 0x52, 0x28, 0x01, 0xAA, 0x01, 0x8B, 0xA7, 0xE4,
                        0xA7, 0x03, 0x00, 0xB1, 0x7F, 0x11, 0xBA
                    }
                }
            };
        }
    }
}